// Generated by CoffeeScript 1.10.0
var Cell;

Cell = (function() {
  Cell.prototype.CELL_LAYER_TAG = "cell-layer";

  Cell.prototype.FULL_COLOR_TAG = "rgba-color";

  Cell.prototype.TEXT_LAYER_TAG = "text-layer";

  Cell.prototype.colorEncoder = new ColorEncoder();

  Cell.prototype.colorClassifier = new ColorClassifier();

  function Cell(layer1, context) {
    var children, i, j, layer, ref;
    this.layer = layer1;
    this.context = context;
    this.command = this.context.command;
    this.pluginID = this.context.plugin.identifier();
    this.height = this.layer.frame().height();
    this.width = this.layer.frame().width();
    children = this.layer.children();
    this.formatColorLayers = [];
    for (i = j = 0, ref = children.count(); 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
      layer = children[i];
      switch ("" + (layer.name())) {
        case "Color":
          this.colorLayer = layer;
          break;
        case "Name":
          this.nameLayer = layer;
          break;
        case "Background":
          this.backgroundLayer = layer;
          break;
        case "Transparent":
          continue;
        case "Cell":
          continue;
        case "Path":
          continue;
        default:
          this.formatColorLayers.push(layer);
      }
    }
  }

  Cell.prototype.setX = function(x) {
    return this.layer.frame().setX(x);
  };

  Cell.prototype.setY = function(y) {
    return this.layer.frame().setY(y);
  };

  Cell.prototype.setColor_withAlias = function(color, alias) {
    var encodedColor, finalName, j, layer, len, ref;
    ref = this.formatColorLayers;
    for (j = 0, len = ref.length; j < len; j++) {
      layer = ref[j];
      encodedColor = this.colorEncoder.encodeColorWithEncoding(color, "" + (layer.name()));
      if (encodedColor) {
        layer.stringValue = encodedColor;
      }
    }
    this.colorLayer.style().fills().firstObject().setColor(color);
    finalName = alias != null ? alias : this.colorClassifier.classify(color.hexValue());
    this.nameLayer.stringValue = finalName;
    this.layer.setName(finalName);
    this.command.setValue_forKey_onLayer_forPluginIdentifier(ColorEncoder.msColorToDictionary(color), this.FULL_COLOR_TAG, this.layer, this.pluginID);
    this.command.setValue_forKey_onLayer_forPluginIdentifier(color.hexValue(), this.CELL_LAYER_TAG, this.layer, this.pluginID);
    return this.command.setValue_forKey_onLayer_forPluginIdentifier(color.hexValue(), this.TEXT_LAYER_TAG, this.nameLayer, this.pluginID);
  };

  return Cell;

})();
